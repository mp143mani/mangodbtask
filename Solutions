Find all the information about each products
        ans:db.products.find({});

Find the product price which are between 400 to 800
        ans: db.products.find({ product_price: { $gte: 400, $lte: 800 } });

Find the product price which are not between 400 to 600
        ans: db.products.find({ product_price: { $not: { $gte: 400, $lte: 600 } } });
List the four product which are grater than 500 in price 
        ans: db.products.find({ product_price: { $gt: 500 } }).limit(4);

Find the product name and product material of each products
        ans:db.products.find({}, { product_name: 1, product_material: 1 });

Find the product with a row id of 10
        ans:db.products.findOne({ id: "10" });

Find only the product name and product material
         ans:db.products.find({ product_material: /soft/i });

Find all products which contain the value of soft in product material 
          ans:db.products.find({ product_color: "indigo", product_price: 492.00 });

Find products which contain product color indigo  and product price 492.00
         ans:db.products.find({ product_color: "indigo", product_price: 492.00 });

Delete the products which product price value are same
       ans:db.products.deleteMany({ product_price: { $in: db.products.aggregate([{ $group: { _id: "$product_price", count: { $sum: 1 } } }, { $match: { count: { $gt: 1 } } }, { $project: { _id: 1 } }]).map(function(doc) { return doc._id; }) } });
